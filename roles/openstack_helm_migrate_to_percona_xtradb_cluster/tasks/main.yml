# Copyright (c) 2022 VEXXHOST, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Get the IP address for the legacy MariaDB service
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Service
    name: mariadb
    namespace: openstack
  register: _openstack_helm_migrate_to_percona_xtradb_cluster_legacy_service
  when: _openstack_helm_migrate_to_percona_xtradb_cluster_legacy_ip is undefined

- name: Get the IP address for the new Percona XtraDB service
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Service
    name: percona-xtradb-haproxy
    namespace: openstack
  register: _openstack_helm_migrate_to_percona_xtradb_cluster_service
  when: _openstack_helm_migrate_to_percona_xtradb_cluster_ip is undefined

- name: Get current values for Helm chart & fail if it already points to Percona XtraDB Cluster
  kubernetes.core.helm_info:
    name: "{{ openstack_helm_migrate_to_percona_xtradb_cluster_release_name }}"
    release_namespace: "{{ openstack_helm_migrate_to_percona_xtradb_cluster_release_namespace }}"
  register: _openstack_helm_migrate_to_percona_xtradb_cluster_helm_info
  failed_when: _oslo_db_endpoints.get('hosts', {}).get('default', '') == 'percona-xtradb-haproxy'
  vars:
    _oslo_db_endpoints: "{{ _openstack_helm_migrate_to_percona_xtradb_cluster_helm_info.status['values']['endpoints']['oslo_db'] }}"

- name: Set facts for database endpoints
  ansible.builtin.set_fact:
    _openstack_helm_migrate_to_percona_xtradb_cluster_legacy_ip: |-
      {{ _openstack_helm_migrate_to_percona_xtradb_cluster_legacy_service.resources[0]['spec']['clusterIP'] }}
    _openstack_helm_migrate_to_percona_xtradb_cluster_legacy_password: |-
      {{ _openstack_helm_migrate_to_percona_xtradb_cluster_helm_info.status['values']['endpoints']['oslo_db']['auth']['admin']['password'] }}
    _openstack_helm_migrate_to_percona_xtradb_cluster_ip: |-
      {{ _openstack_helm_migrate_to_percona_xtradb_cluster_service.resources[0]['spec']['clusterIP'] }}
    _openstack_helm_migrate_to_percona_xtradb_cluster_password: |-
      {{ openstack_helm_endpoints['oslo_db']['auth']['admin']['password'] }}

- name: Ensure PyMySQL packages are installed
  ansible.builtin.pip:
    name: PyMySQL

- name: Check if database already exists & fail if it already exists
  community.mysql.mysql_db:
    login_host: "{{ _openstack_helm_migrate_to_percona_xtradb_cluster_ip }}"
    login_user: root
    login_password: "{{ _openstack_helm_migrate_to_percona_xtradb_cluster_password }}"
    name: "{{ item }}"
    state: present
  check_mode: true
  register: _openstack_helm_migrate_to_percona_xtradb_cluster_db_check
  failed_when: _openstack_helm_migrate_to_percona_xtradb_cluster_db_check is not changed
  loop: "{{ openstack_helm_migrate_to_percona_xtradb_cluster_databases }}"

- name: Scale down replicas to 0 for database facing services
  kubernetes.core.k8s_scale:
    api_version: v1
    kind: "{{ item.kind }}"
    name: "{{ item.name }}"
    namespace: "{{ openstack_helm_migrate_to_percona_xtradb_cluster_release_namespace }}"
    replicas: 0
  loop: "{{ openstack_helm_migrate_to_percona_xtradb_cluster_services }}"

- name: Create temporary file for database dump
  ansible.builtin.tempfile:
    state: file
    prefix: "{{ openstack_helm_migrate_to_percona_xtradb_cluster_release_name }}"
    suffix: .sql
  register: _openstack_helm_migrate_to_percona_xtradb_cluster_file

- name: Dump all of the databases to the local system
  community.mysql.mysql_db:
    login_host: "{{ _openstack_helm_migrate_to_percona_xtradb_cluster_legacy_ip }}"
    login_user: root
    login_password: "{{ _openstack_helm_migrate_to_percona_xtradb_cluster_legacy_password }}"
    name: "{{ openstack_helm_migrate_to_percona_xtradb_cluster_databases }}"
    state: dump
    target: "{{ _openstack_helm_migrate_to_percona_xtradb_cluster_file.path }}"
    skip_lock_tables: true
    dump_extra_args: --skip-add-locks
  async: 7200
  poll: 5

- name: Import databases to the new Percona XtraDB Cluster
  community.mysql.mysql_db:
    login_host: "{{ _openstack_helm_migrate_to_percona_xtradb_cluster_ip }}"
    login_user: root
    login_password: "{{ _openstack_helm_migrate_to_percona_xtradb_cluster_password }}"
    name: |-
      {{
        (openstack_helm_migrate_to_percona_xtradb_cluster_databases | length > 1) |
          ternary('all', openstack_helm_migrate_to_percona_xtradb_cluster_databases)
      }}
    state: import
    target: "{{ _openstack_helm_migrate_to_percona_xtradb_cluster_file.path }}"
  async: 7200
  poll: 5
