# Copyright (c) 2022 VEXXHOST, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Generate OpenStack-Helm endpoints
  ansible.builtin.include_role:
    name: openstack_helm_endpoints
  vars:
    openstack_helm_endpoints_repo_name: "{{ openstack_helm_infra_rabbitmq_chart_repo_name }}"
    openstack_helm_endpoints_repo_url: "{{ openstack_helm_infra_rabbitmq_chart_repo_url }}"
    openstack_helm_endpoints_chart: "{{ openstack_helm_infra_rabbitmq_chart_name }}"

- name: Deploy Helm chart
  kubernetes.core.helm:
    name: "{{ openstack_helm_infra_rabbitmq_chart_name }}"
    chart_ref: "{{ openstack_helm_infra_rabbitmq_chart_repo_name }}/{{ openstack_helm_infra_rabbitmq_chart_name }}"
    chart_version: 0.1.15
    release_namespace: openstack
    kubeconfig: /etc/kubernetes/admin.conf
    values:
      endpoints: "{{ openstack_helm_endpoints }}"
      images:
        tags:
          dep_check: "{{ openstack_helm_infra_rabbitmq_image_repository }}/kubernetes-entrypoint:latest"
          rabbitmq_init: "{{ openstack_helm_infra_rabbitmq_image_repository }}/cli:latest"
          rabbitmq: "{{ openstack_helm_infra_rabbitmq_image_repository }}/rabbitmq:3.8.23"
      pod:
        replicas:
          server: 3
      conf:
        enabled_plugins:
          - rabbitmq_management
          - rabbitmq_peer_discovery_k8s
          - rabbitmq_prometheus
      volume:
        size: 10Gi
      manifests:
        ingress_management: false

- name: Create Service for metrics
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: rabbitmq-metrics
        namespace: openstack
        labels:
          application: rabbitmq
          component: server
      spec:
        selector:
          application: rabbitmq
          component: server
        ports:
          - name: metrics
            port: 15692
            targetPort: 15692

- name: Create ServiceMonitor
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: monitoring.coreos.com/v1
      kind: ServiceMonitor
      metadata:
        name: rabbitmq
        namespace: monitoring
        labels:
          release: kube-prometheus-stack
      spec:
        jobLabel: application
        endpoints:
          - port: "metrics"
            path: "/metrics"
            relabelings:
              - sourceLabels: ["__meta_kubernetes_pod_name"]
                targetLabel: "instance"
              - action: "labeldrop"
                regex: "^(container|endpoint|namespace|pod|service)$"
        namespaceSelector:
          matchNames:
            - openstack
        selector:
          matchLabels:
            application: rabbitmq
            component: server

- name: Create PrometheusRule
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: monitoring.coreos.com/v1
      kind: PrometheusRule
      metadata:
        name: rabbitmq
        namespace: monitoring
        labels:
          release: kube-prometheus-stack
      spec:
        groups:
          - name: rules
            rules:
              - alert: RabbitmqDown
                expr: absent(rabbitmq_build_info)
                for: 1m
                labels:
                  severity: critical
              - alert: RabbitmqNodeDown
                expr: sum(rabbitmq_build_info) < 3
                for: 1m
                labels:
                  severity: critical
              - alert: RabbitmqNodeNotDistributed
                expr: erlang_vm_dist_node_state < 3
                for: 1m
                labels:
                  severity: critical
              - alert: RabbitmqMemoryHigh
                expr: rabbitmq_process_resident_memory_bytes / rabbitmq_resident_memory_limit_bytes > 0.80
                labels:
                  severity: warning
              - alert: RabbitmqMemoryHigh
                expr: rabbitmq_process_resident_memory_bytes / rabbitmq_resident_memory_limit_bytes > 0.95
                labels:
                  severity: critical
              - alert: RabbitmqFileDescriptorsUsage
                expr: rabbitmq_process_open_fds / rabbitmq_process_max_fds > 0.80
                labels:
                  severity: warning
              - alert: RabbitmqFileDescriptorsUsage
                expr: rabbitmq_process_open_fds / rabbitmq_process_max_fds > 0.95
                labels:
                  severity: critical
              - alert: RabbitmqUnackedMessages
                expr: sum(rabbitmq_queue_messages_unacked) BY (queue) > 1000
                for: 5m
                labels:
                  severity: warning
              - alert: RabbitmqUnackedMessages
                expr: sum(rabbitmq_queue_messages_unacked) BY (queue) > 1000
                for: 1h
                labels:
                  severity: critical
              - alert: RabbitmqConnections
                expr: rabbitmq_connections > 1000
                labels:
                  severity: warning
