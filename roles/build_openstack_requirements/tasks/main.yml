# Copyright (c) 2022 VEXXHOST, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Generate temporary file for upper-constraints.txt
  ansible.builtin.tempfile:
    state: file
    prefix: upper-constraints-
  register: _upper_constraints_file

- name: Fetch the exact version of upper-constraints.txt
  ansible.builtin.get_url:
    url: "https://releases.openstack.org/constraints/upper/{{ build_openstack_requirements_release }}"
    dest: "{{ _upper_constraints_file.path }}"
    mode: 0644

- name: Install Ubuntu Cloud Archive keyring
  become: true
  ansible.builtin.apt:
    name: ubuntu-cloud-keyring
    state: present

- name: Add the Ubuntu Cloud Archive repository
  become: true
  ansible.builtin.apt_repository:
    repo: deb http://ubuntu-cloud.archive.canonical.com/ubuntu {{ ansible_distribution_release }}-updates/{{ _uca_release }} main
    state: present
  vars:
    # NOTE(mnaser): If we're building master, we'll use the latest possible Ubuntu cloud archive.
    _uca_release: "{{ (build_openstack_requirements_release == 'master') | ternary('yoga', build_openstack_requirements_release) }}"

- name: Install build requirements
  become: true
  ansible.builtin.apt:
    name:
      - liberasurecode-dev
      - libkrb5-dev
      - libldap2-dev
      - libnss3-dev
      - libpcre3-dev
      - libsasl2-dev
      - libssl-dev
      - libsystemd-dev
      - libvirt-dev
      - pkg-config
    state: present

- name: Remove certain dependencies from upper-constraints.txt
  ansible.builtin.lineinfile:
    path: "{{ _upper_constraints_file.path }}"
    regexp: "^{{ item.name }}"
    state: absent
  when: item.when | default(true)
  loop:
    # confluent-kafka-python requires librdkafka v1.6.0 or later.
    - name: confluent-kafka
      when: ansible_architecture == 'aarch64'
    # We don't support or use PostgreSQL
    - name: psycopg2
    # Not used in any projects that we build
    - name: grpcio
    - name: APScheduler

- name: Generate temporary directory for wheels
  ansible.builtin.file:
    path: "{{ build_openstack_requirements_wheels_path }}"
    state: directory
    mode: 0755

- name: Build all wheels
  changed_when: false
  ansible.builtin.command:
    pip wheel --no-deps -r {{ _upper_constraints_file.path }}
  args:
    chdir: "{{ build_openstack_requirements_wheels_path }}"
  environment:
    CASS_DRIVER_BUILD_CONCURRENCY: "{{ ansible_processor_vcpus }}"
    MAKEFLAGS: "-j{{ ansible_processor_vcpus }}"

- name: Build wheels for extra packages
  changed_when: false
  ansible.builtin.command:
    pip wheel --no-deps -c {{ _upper_constraints_file.path }} uwsgi
  args:
    chdir: "{{ build_openstack_requirements_wheels_path }}"
  environment:
    MAKEFLAGS: "-j{{ ansible_processor_vcpus }}"

- name: Create archive with all wheels
  # TODO(mnaser): Switch this to "community.general.archive" once Zuul is using
  #               a new enough Ansible.
  archive:
    path: "{{ build_openstack_requirements_wheels_path }}/*.whl"
    dest: "{{ build_openstack_requirements_archive_path }}"
    mode: 0644
